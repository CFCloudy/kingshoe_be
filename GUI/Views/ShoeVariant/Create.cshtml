@model GUI.Models.ShoesVariant

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>ShoesVariant</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input asp-for="ProductId" hidden value="@Model.ProductId" class="form-control" />
            <input asp-for="Product" hidden value="@Model.Product" class="form-control" />
            <div class="form-group">
                <label asp-for="Stock" class="control-label">Số lượng</label>
                <input asp-for="Stock" class="form-control" />
                <span asp-validation-for="Stock" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Size" class="control-label">Size</label>
                <select asp-for="Size" class="form-control" asp-items="ViewBag.Size"></select>
            </div>
            <div class="form-group">
                <label asp-for="Color" class="control-label">Màu</label>
                <select asp-for="Color" class="form-control" asp-items="ViewBag.Color"></select>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label">Mô tả</label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ImageId" class="control-label">Hình ảnh</label>
                <br />
                @Html.TextBox("fileImage", "", new { type = "file", multiple = "multiple", accept = "image/*" })

                <br />

                <div class="filearray">
                </div>
                <input name="image" id="image" hidden class="form-control" />
                @*
                <input asp-for="DisplayImage" hidden class="form-control" />
                <span asp-validation-for="DisplayImage" class="text-danger"></span>*@
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Details" asp-controller="Shoe" asp-route-id="@Model.ProductId">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>

    <script>
        let images = [];
        $(document).on('ready', () => {

            $("#fileImage").on('change', function () {

                for (let i = 0; i < this.files.length; ++i) {
                    const file = this.files[i];
                    console.log(file);
                    let filereader = new FileReader();
                    let $img = jQuery.parseHTML("<img width='150' height='100' src=''>");
                    filereader.onload = function () {
                        $img[0].src = this.result;
                    };
                    toDataURL(URL.createObjectURL(file), function (dataUrl) {
                        var obj = {
                            name: file.name,
                            base64: dataUrl,
                            type: file.type
                        }
                        images.push(obj);

                        document.getElementById("image").value = JSON.stringify(images);
                    })
                    
                    
                    filereader.readAsDataURL(this.files[i]);

                    $(".filearray").append($img);

                }

            });
            function toDataURL(url, callback) {
                var xhr = new XMLHttpRequest();
                xhr.onload = function () {
                    var reader = new FileReader();
                    reader.onloadend = function () {
                        callback(reader.result);
                    }
                    reader.readAsDataURL(xhr.response);
                };
                xhr.open('GET', url);
                xhr.responseType = 'blob';
                xhr.send();
            }

        });

    </script>
    @* <script>

        fileImage.onchange = evt => {
            const [file] = fileImage.files

            if (file) {

                preview.src = URL.createObjectURL(file);
                toDataURL(URL.createObjectURL(file), function (dataUrl) {
                    var obj = {
                        name: file.name,
                        base64: dataUrl,
                        type: file.type
                    }
                    console.log(dataUrl)
                    document.getElementById("image").value = JSON.stringify(obj);
                    $("#preview").removeClass("d-none");
                })
            }
        }


    </script>*@
